'use server';

interface ContactFormData {
  firstName: string;
  lastName: string;
  phone: string;
  email?: string;
  comments?: string;
}

export async function sendToTelegram(formData: ContactFormData) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ chat ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  const chatId = process.env.TELEGRAM_CHAT_ID;

  if (!botToken || !chatId) {
    console.error('Telegram bot token or chat ID not configured');
    return { success: false, error: 'Telegram configuration missing' };
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  const message = `
üè• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞*

üë§ *–ò–º—è:* ${formData.firstName} ${formData.lastName}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${formData.phone}
${formData.email ? `üìß *Email:* ${formData.email}` : ''}
${formData.comments ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${formData.comments}` : ''}

üìÖ *–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏:* ${new Date().toLocaleString('uk-UA')}
  `.trim();

  try {
    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'Markdown',
      }),
    });

    if (!response.ok) {
      const errorData = await response.json();
      console.error('Telegram API error:', errorData);
      return { success: false, error: 'Failed to send message to Telegram' };
    }

    return { success: true };
  } catch (error) {
    console.error('Error sending to Telegram:', error);
    return { success: false, error: 'Network error' };
  }
}
